package main

import (
	"bufio"
	"fmt"
	"io"
	"log"
	"net/http"
	"strings"
	"time"
)

func main() {

	start := time.Now()
	url := "https://api.deepseek.com/chat/completions"
	method := "POST"

	payload := strings.NewReader(`{
  "messages": [
    {
      "content": "You are a helpful assistant",
      "role": "system"
    },
    {
      "content": "来个快速排序算法",
      "role": "user"
    }
  ],
  "model": "deepseek-chat",
  "frequency_penalty": 0,
  "max_tokens": 2048,
  "presence_penalty": 0,
  "stop": null,
  "stream": true,
  "temperature": 1,
  "top_p": 1,
  "logprobs": false,
  "top_logprobs": null
}`)

	client := &http.Client{}
	req, err := http.NewRequest(method, url, payload)

	if err != nil {
		fmt.Println(err)
		return
	}
	req.Header.Add("Content-Type", "application/json")
	req.Header.Add("Accept", "application/json")
	req.Header.Add("Authorization", "Bearer sk-b6bb0bfc5736472f86afe08eb74d8a0f")

	res, err := client.Do(req)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer res.Body.Close()
	reader := bufio.NewReader(res.Body)
	for {
		line, err := reader.ReadString('\n')
		if err != nil {
			if err == io.EOF {
				break
			}
			fmt.Println("Error reading response:", err)
			return
		}
		if len(line) > 6 && line[:5] == "data:" {
			eventData := line[6:] // 移除 "data: " 前缀
			// 处理事件数据
			fmt.Println("Received event:", eventData)
		}
	}
	//body, err := ioutil.ReadAll(res.Body)
	//if err != nil {
	//	fmt.Println(err)
	//	return
	//}
	//fmt.Println(string(body))
	log.Println(time.Since(start))
}
