package main

import (
	"fmt"
	"net/http"
	"time"
)

func streamHandler(w http.ResponseWriter, r *http.Request) {
	// Ensure the response can be flushed
	flusher, ok := w.(http.Flusher)
	if !ok {
		http.Error(w, "Streaming unsupported!", http.StatusInternalServerError)
		return
	}

	// Set headers to prevent buffering
	w.Header().Set("Content-Type", "text/plain; charset=utf-8")
	w.Header().Set("Transfer-Encoding", "chunked")
	w.Header().Set("Cache-Control", "no-cache")
	w.Header().Set("Connection", "keep-alive")

	message := "Hello, World!胜多负少发斯蒂芬我认为耳闻"
	for _, char := range message {
		fmt.Fprintf(w, "%c", char)
		flusher.Flush()                   // Ensure each character is sent immediately
		time.Sleep(20 * time.Millisecond) // Delay between characters
	}
}

func main() {
	http.HandleFunc("/stream", streamHandler)

	// Serve the static HTML file
	http.Handle("/", http.FileServer(http.Dir("./static")))

	fmt.Println("Server started at :8080")
	http.ListenAndServe(":8080", nil)
}
